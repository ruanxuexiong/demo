/*
 *     Android基础开发个人积累、沉淀、封装、整理共通
 *     Copyright (c) 2016. 曾繁添 <zftlive@163.com>
 *     Github：https://github.com/zengfantian || http://git.oschina.net/zftlive
 *
 *     Licensed under the Apache License, Version 2.0 (the "License");
 *     you may not use this file except in compliance with the License.
 *     You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 *     Unless required by applicable law or agreed to in writing, software
 *     distributed under the License is distributed on an "AS IS" BASIS,
 *     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *     See the License for the specific language governing permissions and
 *     limitations under the License.
 */

apply plugin: 'com.android.library'

//声明上传发布打包脚本
ext {
    bintrayRepo = 'android'
    bintrayName = 'tencent'

    //compile 'com.zftlive.android.library:tencent:1.0.0'
    publishedGroupId = 'com.zftlive.android.library'
    artifact = 'tencent'

    libraryVersionCode = 2
    libraryVersionName = '1.0.1'
    libraryName = 'AndroidTencent'
    libraryDescription = 'Android develop framework,include basic base classes/widgets/tools/common abstract'

    siteUrl = 'http://git.oschina.net/zftlive/zftlive'
    gitUrl = 'https://git.oschina.net/zftlive/zftlive.git'

    developerId = 'zengfantian'
    developerName = '曾繁添'
    developerEmail = 'zftlive@163.com'

    allLicenses = ["Apache-2.0"]
    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
}

android {
    // 编译SDK的版本
    compileSdkVersion rootProject.ext.compileSdkVersion
    // build tools的版本
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode libraryVersionCode
        versionName libraryVersionName
        ndk {
            // 设置支持的SO库架构,x86是为了支持模拟器运行
            abiFilters 'armeabi' //, 'x86' , 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }
    }

    // 移除lint检查的error
    lintOptions {
        abortOnError false
    }

    //指定so库目录
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']//这一行是没有的，如果我们有.so文件就需要加上这一行代码
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    //bugly依赖集成
    compile 'com.tencent.bugly:crashreport:2.2.2'
    //其中latest.release指代最新版本号，也可以指定明确的版本号，例如2.1.5
    compile 'com.tencent.bugly:nativecrashreport:3.0'
    //其中latest.release指代最新版本号，也可以指定明确的版本号，例如2.2.0
}

//注意：不能放到第二行，否则会报错，顺序不能动,执行以下命令发布到仓库
// -->gradle install
// --> gradle bintrayUpload

//apply from: '../install-module.gradle'
//apply from: '../bintray-upload.gradle'
